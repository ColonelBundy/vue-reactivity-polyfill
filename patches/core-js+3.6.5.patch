diff --git a/node_modules/core-js/modules/es.reflect.set.js b/node_modules/core-js/modules/es.reflect.set.js
index a16b762..99384a9 100644
--- a/node_modules/core-js/modules/es.reflect.set.js
+++ b/node_modules/core-js/modules/es.reflect.set.js
@@ -22,11 +22,13 @@ function set(target, propertyKey, V /* , receiver */) {
   }
   if (has(ownDescriptor, 'value')) {
     if (ownDescriptor.writable === false || !isObject(receiver)) return false;
-    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
-      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
-      existingDescriptor.value = V;
-      definePropertyModule.f(receiver, propertyKey, existingDescriptor);
-    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
+    // just set value
+    target[propertyKey] = V;
+    // if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
+    //   if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
+    //   existingDescriptor.value = V;
+    //   definePropertyModule.f(receiver, propertyKey, existingDescriptor);
+    // } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
     return true;
   }
   return ownDescriptor.set === undefined ? false : (ownDescriptor.set.call(receiver, V), true);
